"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5489],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return k}});var a=n(7378);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),o=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=o(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=u(t,["components","mdxType","originalType","parentName"]),d=o(n),k=r,c=d["".concat(p,".").concat(k)]||d[k]||s[k]||l;return n?a.createElement(c,i(i({ref:e},m),{},{components:n})):a.createElement(c,i({ref:e},m))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=d;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:r,i[1]=u;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},415:function(t,e,n){n.r(e),n.d(e,{assets:function(){return m},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return u},metadata:function(){return o},toc:function(){return s}});var a=n(3117),r=n(102),l=(n(7378),n(3905)),i=["components"],u={},p=void 0,o={unversionedId:"Components/DATA INPUT/slider",id:"Components/DATA INPUT/slider",title:"slider",description:"It is a number inpuit component that input value by slide.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Components/DATA INPUT/slider.md",sourceDirName:"Components/DATA INPUT",slug:"/Components/DATA INPUT/slider",permalink:"/docs/Components/DATA INPUT/slider",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Select",permalink:"/docs/Components/DATA INPUT/select"},next:{title:"Switch",permalink:"/docs/Components/DATA INPUT/switch"}},m={},s=[{value:"Installation",id:"installation",level:2},{value:"Import component",id:"import-component",level:2},{value:"API",id:"api",level:2},{value:"Slider Basic Properties",id:"slider-basic-properties",level:3},{value:"Slider Events",id:"slider-events",level:3},{value:"Example",id:"example",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Set step",id:"set-step",level:3},{value:"Set input range",id:"set-input-range",level:3},{value:"Set tick&#39;s mark",id:"set-ticks-mark",level:3},{value:"Show number input",id:"show-number-input",level:3}],d={toc:s};function k(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"slider"},"Slider"),(0,l.kt)("p",null,"It is a number inpuit component that input value by slide."),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @illa-design/slider\n")),(0,l.kt)("h2",{id:"import-component"},"Import component"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Slider } from "@illa-dedign/slider"\n')),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("h3",{id:"slider-basic-properties"},"Slider Basic Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Props"),(0,l.kt)("th",{parentName:"tr",align:null},"Desc"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showTicks"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether show ticks"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showInput"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether show number input"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reverse"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether reverse ticks"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"marks"),(0,l.kt)("td",{parentName:"tr",align:null},"set ticks\u2018 mark"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Record<number, ReactNode>")),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vertical"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether make silder vertical"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tooltipVisible"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether always show tooltip"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tooltipPosition"),(0,l.kt)("td",{parentName:"tr",align:null},"Set the position of tooltip"),(0,l.kt)("td",{parentName:"tr",align:null},'"top" ',"|",' "tl" ',"|",' "tr" ',"|",' "bottom" ',"|",' "bl" ',"|",' "br" ',"|",' "left" ',"|",' "lt" ',"|",' "lb" ',"|",' "right" ',"|",' "rt" ',"|",' "rb"'),(0,l.kt)("td",{parentName:"tr",align:null},'"top"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether disable the component"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"min"),(0,l.kt)("td",{parentName:"tr",align:null},"Set minimum value"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"max"),(0,l.kt)("td",{parentName:"tr",align:null},"Set maxmum value"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"100")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"step"),(0,l.kt)("td",{parentName:"tr",align:null},"Set step of every tick"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onlyMarkValue"),(0,l.kt)("td",{parentName:"tr",align:null},"whether only marked value can be selected"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"defaultValue"),(0,l.kt)("td",{parentName:"tr",align:null},"Set defaultValue"),(0,l.kt)("td",{parentName:"tr",align:null},"number ","|"," number[]"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"formatTooltip"),(0,l.kt)("td",{parentName:"tr",align:null},"Customize the tooltip"),(0,l.kt)("td",{parentName:"tr",align:null},"(value: number) => string ","|"," ReactNode"),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h3",{id:"slider-events"},"Slider Events"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Props"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Desc"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onAfterChange"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback after value is changed"),(0,l.kt)("td",{parentName:"tr",align:null},"(val: number ","|"," number[]) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onChange"),(0,l.kt)("td",{parentName:"tr",align:"left"},"Callback when value is changed"),(0,l.kt)("td",{parentName:"tr",align:null},"(val: number ","|"," number[]) => void"),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<Slider\n  value={value}\n  onChange={(val: number | number[]) => {\n    setValue(val as number)\n  }}\n  style={{ width: 400 }}\n/>\n")),(0,l.kt)("h3",{id:"set-step"},"Set step"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<Slider\n  defaultValue={0}\n  onChange={(val: number | number[]) => {\n    setValue(val as number)\n  }}\n  step={2}\n  showTicks\n  style={{ width: 400 }}\n/>\n")),(0,l.kt)("h3",{id:"set-input-range"},"Set input range"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"const [value, setValue] = React.useState(0)\n<Slider\n  onChange={(val: number | number[]) => {\n    setValue(val as number)\n  }}\n  min={0}\n  max={20}\n  step={2}\n  showTicks\n  style={{ width: 400 }}\n/>\n")),(0,l.kt)("h3",{id:"set-ticks-mark"},"Set tick's mark"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'const [value, setValue] = React.useState(0)\n<Slider\n  onChange={(val: number | number[]) => {\n    setValue(val as number)\n  }}\n  step={2}\n  marks={{\n    0: "0km",\n    5: "5km",\n    10: "10km",\n    15: "15km",\n}}\n  style={{ width: 400 }}\n/>\n')),(0,l.kt)("h3",{id:"show-number-input"},"Show number input"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'const [value, setValue] = React.useState(0)\n<Slider\n    showInput\n  onChange={(val: number | number[]) => {\n    setValue(val as number)\n  }}\n  step={1}\n  marks={{\n    0: "0km",\n    5: "5km",\n    10: "10km",\n    15: "15km",\n}}\n  style={{ width: 400 }}\n/>\n')))}k.isMDXComponent=!0}}]);