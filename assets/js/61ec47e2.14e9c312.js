"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5227],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return v}});var n=r(7378);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(r),v=i,m=s["".concat(d,".").concat(v)]||s[v]||u[v]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},3444:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var n=r(3117),i=r(102),a=(r(7378),r(3905)),l=["components"],o={},d=void 0,p={unversionedId:"COMPONENTS/LAYOUT/divider",id:"COMPONENTS/LAYOUT/divider",title:"divider",description:"Divider is used to visually separate content",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/COMPONENTS/LAYOUT/divider.md",sourceDirName:"COMPONENTS/LAYOUT",slug:"/COMPONENTS/LAYOUT/divider",permalink:"/docs/COMPONENTS/LAYOUT/divider",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"typography",permalink:"/docs/COMPONENTS/GENERAL/typography"},next:{title:"grid",permalink:"/docs/COMPONENTS/LAYOUT/grid"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Import component",id:"import-component",level:2},{value:"API",id:"api",level:2},{value:"Divider Basic Properties",id:"divider-basic-properties",level:3},{value:"Example",id:"example",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Set Divider&#39;s direction",id:"set-dividers-direction",level:3},{value:"Set Divider&#39;s variant",id:"set-dividers-variant",level:3}],s={toc:u};function v(e){var t=e.components,r=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"divider"},"Divider"),(0,a.kt)("p",null,"Divider is used to visually separate content"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @illa-design/divider\n")),(0,a.kt)("h2",{id:"import-component"},"Import component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Divider } from "@illa-design/divider"\n')),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"divider-basic-properties"},"Divider Basic Properties"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Props"),(0,a.kt)("th",{parentName:"tr",align:null},"Desc"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"direction"),(0,a.kt)("td",{parentName:"tr",align:null},"setting direction of divider"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"vertical" \\| "horizontal"')),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"horizontal"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"variant"),(0,a.kt)("td",{parentName:"tr",align:null},"setting divider's variant"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},' "solid" \\| "dashed" \\| "dotted" \\| "double"')),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"solid"))))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Divider />\n")),(0,a.kt)("h3",{id:"set-dividers-direction"},"Set Divider's direction"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Divider />\n<Divider direction="vertical" />\n')),(0,a.kt)("h3",{id:"set-dividers-variant"},"Set Divider's variant"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Divider />\n<Divider direction="vertical" />\n<Divider variant="dashed" />\n<Divider variant="dotted" />\n<Divider variant="double" />\n')))}v.isMDXComponent=!0}}]);