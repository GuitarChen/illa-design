"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9109],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return m}});var a=n(7378);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),o=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},c=function(t){var e=o(t.components);return a.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=o(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,s(s({ref:e},c),{},{components:n})):a.createElement(k,s({ref:e},c))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,s[1]=l;for(var o=2;o<i;o++)s[o]=n[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6701:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return d}});var a=n(3117),r=n(102),i=(n(7378),n(3905)),s=["components"],l={},p=void 0,o={unversionedId:"Components/NAVIGATION/steps",id:"Components/NAVIGATION/steps",title:"steps",description:"It used for lead in user complete tasks step by step.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/Components/NAVIGATION/steps.md",sourceDirName:"Components/NAVIGATION",slug:"/Components/NAVIGATION/steps",permalink:"/docs/Components/NAVIGATION/steps",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pagination",permalink:"/docs/Components/NAVIGATION/pagination"},next:{title:"Affix",permalink:"/docs/Components/OTHERS/affix"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Import component",id:"import-component",level:2},{value:"API",id:"api",level:2},{value:"Steps Basic Properties",id:"steps-basic-properties",level:3},{value:"Steps Events",id:"steps-events",level:3},{value:"Step Basic Properties",id:"step-basic-properties",level:3},{value:"Example",id:"example",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Set step&#39;s description",id:"set-steps-description",level:3},{value:"Set step&#39;s status",id:"set-steps-status",level:3},{value:"Set steps&#39; layout direction",id:"set-steps-layout-direction",level:3},{value:"Set the step&#39;s label position",id:"set-the-steps-label-position",level:3},{value:"Customize node style",id:"customize-node-style",level:3},{value:"Set change step by click",id:"set-change-step-by-click",level:3}],u={toc:d};function m(t){var e=t.components,n=(0,r.Z)(t,s);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"steps"},"Steps"),(0,i.kt)("p",null,"It used for lead in user complete tasks step by step."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @illa-design/steps\n")),(0,i.kt)("h2",{id:"import-component"},"Import component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Steps } from "@illa-design/steps"\n')),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"steps-basic-properties"},"Steps Basic Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Props"),(0,i.kt)("th",{parentName:"tr",align:null},"Desc"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"variant"),(0,i.kt)("td",{parentName:"tr",align:null},"Variant of step"),(0,i.kt)("td",{parentName:"tr",align:null},'"line" ',"|",' "dot" ',"|",' "navigation"'),(0,i.kt)("td",{parentName:"tr",align:null},'"line"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"size"),(0,i.kt)("td",{parentName:"tr",align:null},"Size of step"),(0,i.kt)("td",{parentName:"tr",align:null},'"small" ',"|",' "large"'),(0,i.kt)("td",{parentName:"tr",align:null},'"small"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"direction"),(0,i.kt)("td",{parentName:"tr",align:null},"Layout direction of nodes"),(0,i.kt)("td",{parentName:"tr",align:null},'"vertical" ',"|",' "horizontal"'),(0,i.kt)("td",{parentName:"tr",align:null},'"horizontal"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"labelPlacement"),(0,i.kt)("td",{parentName:"tr",align:null},"Placement of label"),(0,i.kt)("td",{parentName:"tr",align:null},'"vertical" ',"|",' "horizontal"'),(0,i.kt)("td",{parentName:"tr",align:null},'"horizontal"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"current"),(0,i.kt)("td",{parentName:"tr",align:null},"current step"),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"1")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"status"),(0,i.kt)("td",{parentName:"tr",align:null},"current step status"),(0,i.kt)("td",{parentName:"tr",align:null},'"wait" ',"|",' "process" ',"|",' "finish" ',"|",' "error"'),(0,i.kt)("td",{parentName:"tr",align:null},'"process"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"customDot"),(0,i.kt)("td",{parentName:"tr",align:null},"Customize node"),(0,i.kt)("td",{parentName:"tr",align:null},"(IconDot: React.ReactNode, stepConfig: CustomDotRecord) => React.ReactNode"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h3",{id:"steps-events"},"Steps Events"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Props"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Desc"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"onChange"),(0,i.kt)("td",{parentName:"tr",align:"center"},"Callback when current step is changed"),(0,i.kt)("td",{parentName:"tr",align:null},"(current: number, id: any)=> void"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h3",{id:"step-basic-properties"},"Step Basic Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Props"),(0,i.kt)("th",{parentName:"tr",align:null},"Desc"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"id"),(0,i.kt)("td",{parentName:"tr",align:null},"Id of step"),(0,i.kt)("td",{parentName:"tr",align:null},"any"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"title"),(0,i.kt)("td",{parentName:"tr",align:null},"title of step"),(0,i.kt)("td",{parentName:"tr",align:null},"string ","|"," ReactNode"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"description"),(0,i.kt)("td",{parentName:"tr",align:null},"description of step"),(0,i.kt)("td",{parentName:"tr",align:null},"string ","|"," ReactNode"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"status"),(0,i.kt)("td",{parentName:"tr",align:null},"status of step"),(0,i.kt)("td",{parentName:"tr",align:null},'"wait" ',"|",' "process" ',"|",' "finish" ',"|",' "error"'),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"disabled"),(0,i.kt)("td",{parentName:"tr",align:null},"whether step is disabled"),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps current={2} variant="dot">\n  <Step title="Succeeded" />\n  <Step title="Processing" />\n  <Step title="Pending" />\n</Steps>\n')),(0,i.kt)("h3",{id:"set-steps-description"},"Set step's description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps current={2}>\n  <Step title="Succeeded" description="This is a description." />\n  <Step title="Processing" description="This is a description." />\n  <Step title="Pending" description="This is a description." />\n</Steps>\n')),(0,i.kt)("h3",{id:"set-steps-status"},"Set step's status"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps current={2}>\n  <Step title="Succeeded" description="This is a description." status="finish" />\n  <Step title="Processing" description="This is a description." status="process" />\n  <Step title="Pending" description="This is a description." status="wait" />\n</Steps>\n')),(0,i.kt)("h3",{id:"set-steps-layout-direction"},"Set steps' layout direction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps current={2} direction="vertical">\n  <Step title="Succeeded" description="This is a description." status="finish" />\n  <Step title="Processing" description="This is a description." status="process" />\n  <Step title="Pending" description="This is a description." status="wait" />\n</Steps>\n')),(0,i.kt)("h3",{id:"set-the-steps-label-position"},"Set the step's label position"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Steps current={2} labelPlacement="vertical" >\n  <Step title="Succeeded" description="This is a description." status="finish" />\n  <Step title="Processing" description="This is a description." status="process" />\n  <Step title="Pending" description="This is a description." status="wait" />\n</Steps>\n')),(0,i.kt)("h3",{id:"customize-node-style"},"Customize node style"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'const customDot = (iconNode, { index }) => {\n  return <Tooltip content={index}>{iconNode}</Tooltip>\n}\n<Steps customDot={customDot} >\n  <Step title="Succeeded" description="This is a description." status="finish" />\n  <Step title="Processing" description="This is a description." status="process" />\n  <Step title="Pending" description="This is a description." status="wait" />\n</Steps>\n')),(0,i.kt)("h3",{id:"set-change-step-by-click"},"Set change step by click"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'const [current, setCurrent] = useState(1)\n  const onChange = (index: number) => {\n    setCurrent(index)\n  }\n<Steps \n  onChange={onChange}\n  current={current} \n>\n  <Step title="Succeeded" description="This is a description." status="finish" />\n  <Step title="Processing" description="This is a description." status="process" />\n  <Step title="Pending" description="This is a description." status="wait" />\n</Steps>\n')))}m.isMDXComponent=!0}}]);