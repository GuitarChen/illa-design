"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6045],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return c}});var a=n(7378);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=a.createContext({}),p=function(t){var e=a.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=p(t.components);return a.createElement(i.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,i=t.parentName,d=u(t,["components","mdxType","originalType","parentName"]),s=p(n),c=r,k=s["".concat(i,".").concat(c)]||s[c]||m[c]||l;return n?a.createElement(k,o(o({ref:e},d),{},{components:n})):a.createElement(k,o({ref:e},d))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=s;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u.mdxType="string"==typeof t?t:r,o[1]=u;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9741:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return m}});var a=n(3117),r=n(102),l=(n(7378),n(3905)),o=["components"],u={},i=void 0,p={unversionedId:"Components/DATA DISPLAY/table",id:"Components/DATA DISPLAY/table",title:"table",description:"\u8868\u683c\u662f\u7528\u884c\u5217\u7684\u5f62\u5f0f\uff0c\u7ed3\u6784\u5316\u5c55\u793a\u4fe1\u606f\u7684\u7ec4\u4ef6\uff1b\u65b9\u4fbf\u7528\u6237\u67e5\u770b\u3001\u5206\u6790\u6570\u636e",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/Components/DATA DISPLAY/table.md",sourceDirName:"Components/DATA DISPLAY",slug:"/Components/DATA DISPLAY/table",permalink:"/zh-cn/docs/Components/DATA DISPLAY/table",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"statistic",permalink:"/zh-cn/docs/Components/DATA DISPLAY/statistic"},next:{title:"\u6807\u7b7e\u9875 Tabs",permalink:"/zh-cn/docs/Components/DATA DISPLAY/tabs"}},d={},m=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u5f15\u7528\u7ec4\u4ef6",id:"\u5f15\u7528\u7ec4\u4ef6",level:2},{value:"\u7ec4\u4ef6\u63a5\u53e3(API)",id:"\u7ec4\u4ef6\u63a5\u53e3api",level:2},{value:"Table \u57fa\u7840\u5c5e\u6027",id:"table-\u57fa\u7840\u5c5e\u6027",level:3},{value:"Table \u4e8b\u4ef6",id:"table-\u4e8b\u4ef6",level:3},{value:"TableFilter \u57fa\u7840\u5c5e\u6027",id:"tablefilter-\u57fa\u7840\u5c5e\u6027",level:3},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:3},{value:"\u57fa\u7840\u7528\u6cd5",id:"\u57fa\u7840\u7528\u6cd5",level:3},{value:"\u6570\u636e\u9a71\u52a8",id:"\u6570\u636e\u9a71\u52a8",level:3}],s={toc:m};function c(t){var e=t.components,n=(0,r.Z)(t,o);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u8868\u683c-table"},"\u8868\u683c Table"),(0,l.kt)("p",null,"\u8868\u683c\u662f\u7528\u884c\u5217\u7684\u5f62\u5f0f\uff0c\u7ed3\u6784\u5316\u5c55\u793a\u4fe1\u606f\u7684\u7ec4\u4ef6\uff1b\u65b9\u4fbf\u7528\u6237\u67e5\u770b\u3001\u5206\u6790\u6570\u636e"),(0,l.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @illa-design/table\n")),(0,l.kt)("h2",{id:"\u5f15\u7528\u7ec4\u4ef6"},"\u5f15\u7528\u7ec4\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Table } from "@illa-dedign/table"\n')),(0,l.kt)("h2",{id:"\u7ec4\u4ef6\u63a5\u53e3api"},"\u7ec4\u4ef6\u63a5\u53e3(API)"),(0,l.kt)("h3",{id:"table-\u57fa\u7840\u5c5e\u6027"},"Table \u57fa\u7840\u5c5e\u6027"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570\u540d"),(0,l.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u6570\u636e"),(0,l.kt)("td",{parentName:"tr",align:null},"object[]"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"columns"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5217\u7684\u914d\u7f6e\u63cf\u8ff0"),(0,l.kt)("td",{parentName:"tr",align:null},"Column[]"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8868\u683c\u5c3a\u5bf8"),(0,l.kt)("td",{parentName:"tr",align:null},'"small" ',"|",' "medium" ',"|",' "large"'),(0,l.kt)("td",{parentName:"tr",align:null},'"medium"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tableLayout"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u8868\u683c\u5e03\u5c40"),(0,l.kt)("td",{parentName:"tr",align:null},'"auto"  ',"|",' "fixed"'),(0,l.kt)("td",{parentName:"tr",align:null},'"auto"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"border"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u6709\u5916\u8fb9\u6846"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"borderCell"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u6709\u5217\u5206\u5272\u7ebf"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"striped"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u6709\u884c\u5206\u5272\u7ebf"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"align"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u5355\u5143\u683c\u5185\u5bb9\u5bf9\u9f50\u65b9\u5f0f"),(0,l.kt)("td",{parentName:"tr",align:null},'"left" ',"|",' "center" ',"|",' "right" ',"|",' "start" ',"|",' "end" ',"|",' "flex-star" ',"|",' "flex-end"'),(0,l.kt)("td",{parentName:"tr",align:null},'"left"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showHeader"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u5c55\u793a\u8868\u5934"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"showFooter"),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f\u5426\u5c55\u793a\u8868\u5c3e"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disableSortBy"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u7981\u7528\u6392\u5e8f\u529f\u80fd"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disableFilters"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u7981\u7528\u8fc7\u6ee4\u529f\u80fd"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disableRowSelect"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u662f\u5426\u7981\u7528\u884c\u9009\u62e9\u529f\u80fd"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h3",{id:"table-\u4e8b\u4ef6"},"Table \u4e8b\u4ef6"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570\u540d"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onRowSelectChange"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5f53\u9009\u62e9\u7684\u884c\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(rows: Array<Row<D>>) => void")),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h3",{id:"tablefilter-\u57fa\u7840\u5c5e\u6027"},"TableFilter \u57fa\u7840\u5c5e\u6027"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u53c2\u6570\u540d"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"columnProps"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u8bbe\u7f6e\u5217\u7684\u5c5e\u6027"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"UseFiltersInstanceProps<D>")),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"renderFilterContent"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u8bbe\u7f6e\u8fc7\u6ee4\u5668\u7684\u5185\u5bb9"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(columnProps: UseFiltersInstanceProps<D>) => ReactNode")),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h3",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,l.kt)("h3",{id:"\u57fa\u7840\u7528\u6cd5"},"\u57fa\u7840\u7528\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"<Table>\n  <Thead>\n    <Tr>\n      <Th>First</Th>\n      <Th>Second</Th>\n      <Th>Third</Th>\n    </Tr>\n  </Thead>\n  <TBody>\n    <Tr>\n      <Td>1</Td>\n      <Td>2</Td>\n      <Td>3</Td>\n    </Tr>\n    <Tr>\n      <Td>4</Td>\n      <Td>5</Td>\n      <Td>6</Td>\n    </Tr>\n  </TBody>\n  <TFoot>\n    <Tr>\n      <Td>7</Td>\n      <Td>8</Td>\n      <Td>9</Td>\n    </Tr>\n  </TFoot>\n</Table>\n")),(0,l.kt)("h3",{id:"\u6570\u636e\u9a71\u52a8"},"\u6570\u636e\u9a71\u52a8"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'const data = useMemo(\n  () => [\n    {\n      col1: "Hello",\n      col2: "World",\n    } as DemoData,\n    {\n      col1: "react-table",\n      col2: "rocks",\n      disableRowSelect: true,\n    } as DemoData,\n    {\n      col1: "whatever",\n      col2: "you want",\n    } as DemoData,\n  ],\n  [],\n)\n\nconst columns = useMemo(\n  () => [\n    {\n      Header: "Column 1",\n      Footer: "Footer 1",\n      accessor: "col1", // accessor is the "key" in the data\n      Filter: (columnProps: UseFiltersInstanceProps<DemoData>) => {\n        const [currentInput, setCurrentInput] = useState<string>("")\n        return (\n          <TableFilter\n            _css={css`\n              margin-left: 4px;\n            `}\n            renderFilterContent={(\n              columnProps?: UseFiltersInstanceProps<DemoData>,\n            ) => {\n              return (\n                <Input\n                  value={currentInput}\n                  onChange={(value) => {\n                    setCurrentInput(value)\n                    columnProps?.setFilter("col1", value)\n                  }}\n                />\n              )\n            }}\n            columnProps={columnProps}\n          />\n        )\n      },\n      filter: "includes", // equals, between\n    },\n    {\n      Header: "Column 2",\n      Footer: "Footer 2",\n      accessor: "col2",\n      Filter: (columnProps: UseFiltersInstanceProps<DemoData>) => {\n        const [currentInput, setCurrentInput] = useState<string>("")\n        return (\n          <TableFilter\n            _css={css`\n              margin-left: 4px;\n            `}\n            renderFilterContent={(\n              columnProps?: UseFiltersInstanceProps<DemoData>,\n            ) => {\n              return (\n                <Input\n                  value={currentInput}\n                  onChange={(value) => {\n                    setCurrentInput(value)\n                      columnProps?.setFilter("col2", value)\n                  }}\n                />\n              )\n            }}\n            columnProps={columnProps}\n          />\n        )\n      },\n      filter: (\n        rows: Array<Row>,\n        columnIds: Array<String>, //\n        filterValue: string,\n      ) => {\n        if (filterValue == "") {\n          return rows\n        }\n        return rows.filter((value) => {\n          return (\n            (value.cells.find((value) => {\n              return columnIds.includes(value.column.id)\n            })?.value as string) ?? ""\n          ).includes(filterValue)\n        })\n      },\n      },\n  ],\n  [],\n)\nreturn <Table data={data} columns={columns} {...args} />\n')))}c.isMDXComponent=!0}}]);